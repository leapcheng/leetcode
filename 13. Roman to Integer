Solution 1:
class Solution {
    public int romanToInt(String s) {
        char[] cs = s.toCharArray();
        int sum = 0;
        int i = 0;
        while(i < cs.length) {
            if(cs[i] == 'M') {
                sum += 1000;
                ++i;
            }else if(cs[i] == 'D') {
                sum += 500;
                ++i;
            }else if(cs[i] == 'C') {
                if(i + 1 < cs.length && cs[i + 1] == 'D') {
                    sum += 400;
                    i += 2;
                }else if(i + 1 < cs.length && cs[i + 1] == 'M') {
                    sum += 900;
                    i += 2;
                }else {
                    sum += 100;
                    ++i;
                }
            }else if(cs[i] == 'L') {
                sum += 50;
                ++i;
            }else if(cs[i] == 'X') {
                if(i + 1 < cs.length && cs[i + 1] == 'L') {
                    sum += 40;
                    i += 2;
                }else if(i + 1 < cs.length && cs[i + 1] == 'C') {
                    sum += 90;
                    i += 2;
                }else {
                    sum += 10;
                    ++i;
                }
            }else if(cs[i] == 'V') {
                sum += 5;
                ++i;
            }else {
                if(i + 1 < cs.length && cs[i + 1] == 'V') {
                    sum += 4;
                    i += 2;
                }else if(i + 1 < cs.length && cs[i + 1] == 'X') {
                    sum += 9;
                    i += 2;
                }else {
                    sum += 1;
                    ++i;
                }
            }
        }
        return sum;
    }
}

Solution 2:
class Solution {
    public int romanToInt(String s) {
        Map<Character, Integer> map = new HashMap<Character, Integer>() {
            {
                put('I', 1);
                put('V', 5);
                put('X', 10);
                put('L', 50);
                put('C', 100);
                put('D', 500);
                put('M', 1000);
            }
        };
        int ans = 0;
        for(int i = 0; i < s.length(); ++i) {
            if(i < s.length() - 1 && map.get(s.charAt(i)) < map.get(s.charAt(i + 1))) {
                ans -= map.get(s.charAt(i));
            }else {
                ans += map.get(s.charAt(i));
            }
        }
        return ans;
    }
}
