class Solution{
    public String longestPalindrome(String s){
        if(s == null || s.equals("")){
            return "";
        }
        int n = s.length();
        int[][] dp = new int[n][n];
        int max = 0;
        int l = 0;
        int r = 0;
        for(int len = 0; len < n; len++){
            for(int i = 0; i + len < n; i++){
                int j = i + len;
                if(i == j){
                    dp[i][j] = 1;
                }else if(s.charAt(i) == s.charAt(j) && dp[i + 1][j - 1] == j - i - 1){
                    dp[i][j] = j - i + 1;
                }else{
                    dp[i][j] = Math.max(dp[i + 1][j], dp[i][j - 1]);
                }
                if(dp[i][j] > max){
                    max = dp[i][j];
                    l = i;
                    r = j;
                }
            }
        }
        return s.substring(l, r + 1);
    }
}
