class Solution {
    public int maxCoins(int[] nums) {
        int n = nums.length + 2;
        int[] coins = new int[n];
        coins[0] = 1;
        for(int i = 0; i < n - 2; ++i) {
            coins[i + 1] = nums[i];
        }
        coins[n - 1] = 1;
        
        int[][] dp = new int[n][n]; // dp[i][j]表示i、j之间的能获得的最大值，但不包括i、j
        for(int len = 2; len < n; ++len) {
            for(int l = 0; l + len < n; ++l) {
                int r = l + len;
                for(int k = l + 1; k < r; ++k) {
                    dp[l][r] = Math.max(dp[l][r], dp[l][k] + dp[k][r] + coins[l] * coins[k] * coins[r]);
                }
            }
        }
        return dp[0][n - 1];
    }
}
