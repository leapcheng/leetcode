class Solution {
    public int maxArea(int[] height) {
        int i = 0, j = height.length - 1, max = 0;
        while(i < j){
            //如果我们试图将指向较长线段的指针向内侧移动，矩形区域的面积将受限于较短的线段而不会获得任何增加。
            //但是，在同样的条件下，移动指向较短线段的指针尽管造成了矩形宽度的减小，但却可能会有助于面积的增大。
            //因为移动较短线段的指针会得到一条相对较长的线段，这可以克服由宽度减小而引起的面积减小。
            int h = height[i] < height[j] ? height[i++] : height[j--];
            max = Math.max(max, h * (j - i + 1)); //之所以+1，是因为上面进行了i++或j--。
        }
        return max;
    }
}
