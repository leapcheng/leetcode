class Solution {
    public List<List<Integer>> fourSum(int[] nums, int target) {
        List<List<Integer>> lists = new ArrayList<>();
        if(nums == null || nums.length < 4) {
            return lists;
        }
        Arrays.sort(nums);
        
        for(int i = 0; i < nums.length - 3; ++i) {
            if(i > 0 && nums[i] == nums[i - 1]) {
                continue;
            }
            for(int j = i + 1; j < nums.length - 2; ++j) {
                if(j > i + 1 && nums[j] == nums[j - 1]) {
                    continue;
                }
                int l = j + 1;
                int r = nums.length - 1;
                int temp = target - nums[i] - nums[j];
                while(l < r) {
                    if(nums[l] + nums[r] == temp) {
                        List<Integer> list = new ArrayList<>();
                        list.add(nums[i]);
                        list.add(nums[j]);
                        list.add(nums[l]);
                        list.add(nums[r]);
                        lists.add(list);
                        while(l < r && nums[l + 1] == nums[l]) {
                            ++l;
                        }
                        ++l;
                        --r;
                    }else if(nums[l] + nums[r] < temp) {
                        ++l;
                    }else {
                        --r;
                    }
                }
            }
        }
        return lists;
    }
}
