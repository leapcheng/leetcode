class Solution {
    public List<List<Integer>> fourSum(int[] nums, int target) {
        
        List<List<Integer>> lists = new ArrayList<>();
        

        int n = nums.length;
        if(nums == null ||  n < 4){
            return lists;
        }
        Arrays.sort(nums);
        
        for(int i = 0; i < n - 3; i++){
            if(i > 0 && nums[i] == nums[i - 1]){
                continue;
            }
            int t = target - nums[i];
            
            for(int j = i + 1; j < n - 2; j++){
                if(j > i + 1 && nums[j] == nums[j - 1]){
                    continue;
                }
                int tt = t - nums[j];
                
                int l = j + 1;
                int r = n - 1;
                while(l < r){
                    if(nums[l] + nums[r] == tt){
                        List<Integer> list = new ArrayList<>();
                        list.add(nums[i]);
                        list.add(nums[j]);
                        list.add(nums[l]);
                        list.add(nums[r]);
                        lists.add(list);
                        while(l < r && nums[l] == nums[l + 1]){
                            l++;
                        }
                        l++;
                        r--;
                    }else if(nums[l] + nums[r] < tt){
                        l++;
                    }else{
                        r--;
                    }
                }
            }
        }
        return lists;        
    }
}
