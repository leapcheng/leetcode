class Solution {
    public boolean exist(char[][] board, String word) {
        if(board == null || board.length == 0 || board[0] == null || board[0].length == 0){
            return false;
        }
        for(int i = 0; i < board.length; ++i){
            for(int j = 0; j < board[0].length; ++j){
                if(board[i][j] == word.charAt(0) && (word.length() == 1 || dfs(i, j, 0, board, word))){
                    return true;
                }
            }
        }
        return false;
    }
    public boolean dfs(int i, int j, int k, char[][] board, String word){
        if(k == word.length()){
            return true;
        }
        if(i < 0 || j < 0 || i >= board.length || j >= board[0].length || word.charAt(k) != board[i][j]){
            return false; 
        }
        char temp = board[i][j];
        board[i][j] = '#';
        if(dfs(i - 1, j, k + 1, board, word) || dfs(i + 1, j, k + 1, board, word) || dfs(i, j - 1, k + 1, board, word) || dfs(i, j + 1, k + 1, board, word)){
            return true;
        }
        board[i][j] = temp;
        return false;
    }
}
