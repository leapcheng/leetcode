class Solution {
    public String countAndSay(int n) {
        if(n < 1){
            return null;
        }
        String s = "";
        HashMap<Integer, Integer> map = new HashMap<Integer, Integer>();
        map.put(0, 1);
        int count = 0;
        int k = 0;
        for(int i = 2; i <= n; i++){
            HashMap<Integer, Integer> cur = new HashMap<Integer, Integer>();
            k = map.get(0);
            count = 1;
            int t = 0;
            for(int j = 1; j < map.size(); j++){
                if(map.get(j) != k){
                    cur.put(t++, count);
                    cur.put(t++, k);
                    k = map.get(j);
                    count = 1;
                }
                else{
                    count++;
                }
            }
            cur.put(t++, count);
            cur.put(t++, k);
            map = cur;
        }
        for(int i = 0; i < map.size(); i++){
            s += String.valueOf(map.get(i));
        }
        return s;
    }
}
