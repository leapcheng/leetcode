/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public List<TreeNode> generateTrees(int n) {
        if(n == 0) {
            return new ArrayList<>();
        }
        return func(1, n);
    }
    
    public List<TreeNode> func(int l, int r) {
        List<TreeNode> ans = new ArrayList<>();
        if(l > r) {
            ans.add(null);
            return ans;
        }
        for(int i = l; i <= r; ++i) {
            List<TreeNode> lefts = func(l, i - 1);
            List<TreeNode> rights = func(i + 1, r);
            
            for(TreeNode left: lefts) {
                for(TreeNode right: rights) {
                    TreeNode node = new TreeNode(i);
                    node.left = left;
                    node.right = right;
                    ans.add(node);
                }
            }
            
        }
        return ans;
    }
}
